<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Image editing on Koby Bibas</title>
    <link>https://kobybibas.github.io/tags/image-editing/</link>
    <description>Recent content in Image editing on Koby Bibas</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 14 Oct 2023 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://kobybibas.github.io/tags/image-editing/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>[Summary] Drag Your GAN: Interactive Point-based Manipulation on the Generative Image Manifold</title>
      <link>https://kobybibas.github.io/posts/20231014_drage_your_gan/summary/</link>
      <pubDate>Sat, 14 Oct 2023 00:00:00 +0000</pubDate>
      <guid>https://kobybibas.github.io/posts/20231014_drage_your_gan/summary/</guid>
      <description>TL;DR This work enables interactive editing of a GAN&amp;rsquo;s generated image by translating (&amp;ldquo;dragging&amp;rdquo;) any point in the image to a target location.
Problem statements GAN based image generation takes a noise vector to generate an image. There is a need of a localized controlled image manipulation as moving a region to a different location in the image.
Method Given a GAN generated image, a user input of the source coordinates (q) and the coordinates of the destination (p)</description>
    </item>
    <item>
      <title>[Summary] MultiDiffusion: Fusing Diffusion Paths for Controlled Image Generation</title>
      <link>https://kobybibas.github.io/posts/20230525_multidiffusion/summary/</link>
      <pubDate>Fri, 19 May 2023 00:00:00 +0000</pubDate>
      <guid>https://kobybibas.github.io/posts/20230525_multidiffusion/summary/</guid>
      <description>TL;DR To enable a more controllable image diffusion, MultiDiffusion introduce patches generation with a global constrain.
Problem statements Diffusion models lack user controllability and methods that offer such control require a costly fine-tuning.
Method The method can be reduced to the following algorithm: At each time step t:
Extract patches from the global image I_{t-1} Execute the de-noising step to generate the patches J_{i,t} Combine the patches by average their pixel values to create the global image I_t For the panorama use case: simply generate N images with overlapping regions between them.</description>
    </item>
  </channel>
</rss>
